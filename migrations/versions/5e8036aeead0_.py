"""empty message

Revision ID: 5e8036aeead0
Revises: 
Create Date: 2023-05-17 13:54:08.032201

"""
from alembic import op
import sqlalchemy as sa
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '5e8036aeead0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('firstname', sa.String(length=40), nullable=False),
    sa.Column('lastname', sa.String(length=40), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq
    op.create_table('chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_Id', sa.Integer(), nullable=False),
    sa.Column('receiver_Id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=1000), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=True),
    sa.Column('updated_at', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['sender_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_Id', sa.Integer(), nullable=False),
    sa.Column('longText', sa.String(length=2000), nullable=False),
    sa.ForeignKeyConstraint(['owner_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_Id', sa.Integer(), nullable=False),
    sa.Column('post_Id', sa.Integer(), nullable=False),
    sa.Column('commentText', sa.String(length=2000), nullable=False),
    sa.ForeignKeyConstraint(['post_Id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_Id', sa.Integer(), nullable=False),
    sa.Column('post_Id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['post_Id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_Id', sa.Integer(), nullable=False),
    sa.Column('post_Id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_Id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('likes')
    op.drop_table('images')
    op.drop_table('comments')
    op.drop_table('posts')
    op.drop_table('chats')
    op.drop_table('users')
    # ### end Alembic commands ###
